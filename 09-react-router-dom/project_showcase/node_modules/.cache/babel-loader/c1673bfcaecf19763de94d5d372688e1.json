{"ast":null,"code":"var _jsxFileName = \"/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectEditForm from \"./components/ProjectEditForm\";\nimport ProjectDetail from \"./components/ProjectDetail\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [projectId, setProjectId] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/projects\").then(resp => resp.json()).then(projects => setProjects(projects));\n  }, []);\n\n  const onToggleDarkMode = () => {\n    setIsDarkMode(isDarkMode => !isDarkMode);\n  };\n\n  const onAddProject = newProj => {\n    setProjects(projects => [...projects, newProj]);\n  };\n\n  const completeEditing = () => {\n    setProjectId(null);\n  };\n\n  const enterProjectEditModeFor = projectId => {\n    setProjectId(projectId);\n  };\n\n  const onUpdateProject = updatedProj => {\n    const updatedProjects = projects.map(ogProject => {\n      if (ogProject.id === updatedProj.id) {\n        return updatedProj;\n      } else {\n        return ogProject;\n      }\n    });\n    setProjects(updatedProjects);\n    completeEditing();\n  };\n\n  const onDeleteProject = deletedProj => {\n    const updatedProjects = projects.filter(project => project.id !== deletedProj.id);\n    setProjects(updatedProjects);\n  };\n\n  const renderForm = () => {\n    if (projectId) {\n      return /*#__PURE__*/_jsxDEV(ProjectEditForm, {\n        projectId: projectId,\n        onUpdateProject: onUpdateProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ProjectForm, {\n        onAddProject: onAddProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDarkMode ? \"App\" : \"App light\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      onToggleDarkMode: onToggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), renderForm(), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects,\n      enterProjectEditModeFor: enterProjectEditModeFor,\n      onDeleteProject: onDeleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectDetail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"AAIMWhv1ei8rZaVgbrABihRwawU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/App.js"],"names":["useState","useEffect","Header","ProjectForm","ProjectList","ProjectEditForm","ProjectDetail","Home","App","isDarkMode","setIsDarkMode","projects","setProjects","projectId","setProjectId","fetch","then","resp","json","onToggleDarkMode","onAddProject","newProj","completeEditing","enterProjectEditModeFor","onUpdateProject","updatedProj","updatedProjects","map","ogProject","id","onDeleteProject","deletedProj","filter","project","renderForm"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ProjectList from \"./components/ProjectList\";\nimport ProjectEditForm from \"./components/ProjectEditForm\";\nimport ProjectDetail from \"./components/ProjectDetail\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [projectId, setProjectId] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/projects\")\n      .then((resp) => resp.json())\n      .then((projects) => setProjects(projects));\n  }, []);\n\n  const onToggleDarkMode = () => {\n    setIsDarkMode((isDarkMode) => !isDarkMode);\n  };\n\n  const onAddProject = (newProj) => {\n    setProjects((projects) => [...projects, newProj]);\n  };\n\n  const completeEditing = () => {\n    setProjectId(null);\n  };\n\n  const enterProjectEditModeFor = (projectId) => {\n    setProjectId(projectId);\n  };\n\n  const onUpdateProject = (updatedProj) => {\n    const updatedProjects = projects.map((ogProject) => {\n      if (ogProject.id === updatedProj.id) {\n        return updatedProj;\n      } else {\n        return ogProject;\n      }\n    });\n    setProjects(updatedProjects);\n    completeEditing();\n  };\n\n  const onDeleteProject = (deletedProj) => {\n    const updatedProjects = projects.filter(\n      (project) => project.id !== deletedProj.id\n    );\n    setProjects(updatedProjects);\n  };\n\n  const renderForm = () => {\n    if (projectId) {\n      return (\n        <ProjectEditForm\n          projectId={projectId}\n          onUpdateProject={onUpdateProject}\n        />\n      );\n    } else {\n      return <ProjectForm onAddProject={onAddProject} />;\n    }\n  };\n\n  return (\n    <div className={isDarkMode ? \"App\" : \"App light\"}>\n      <Header isDarkMode={isDarkMode} onToggleDarkMode={onToggleDarkMode} />\n      <Home />\n      {renderForm()}\n      <ProjectList\n        projects={projects}\n        enterProjectEditModeFor={enterProjectEditModeFor}\n        onDeleteProject={onDeleteProject}\n      />\n      <ProjectDetail />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}