{"ast":null,"code":"var _jsxFileName = \"/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/components/ProjectDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectDetail = () => {\n  _s();\n\n  const [claps, setClaps] = useState(0);\n  const [project, setProject] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const id = 1;\n  useEffect(() => {\n    fetch(`http://localhost:4000/projects/${id}`).then(r => r.json()).then(project => {\n      setProject(project);\n      setIsLoaded(true);\n    });\n  }, [id]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  const {\n    image,\n    name,\n    about,\n    link,\n    phase\n  } = project;\n\n  function handleClapClick() {\n    setClaps(claps => claps + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-detail box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"claps\",\n          onClick: handleClapClick,\n          children: [\"\\uD83D\\uDC4F\", claps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), link ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            href: link,\n            children: \"Project Homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extra\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge blue\",\n            children: [\"Phase \", phase]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectDetail, \"nfIlRZE2eLKeQhV3iSNCJby/Ju4=\");\n\n_c = ProjectDetail;\nexport default ProjectDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"sources":["/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/components/ProjectDetail.js"],"names":["React","useEffect","useState","ProjectDetail","claps","setClaps","project","setProject","isLoaded","setIsLoaded","id","fetch","then","r","json","image","name","about","link","phase","handleClapClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAMQ,EAAE,GAAG,CAAX;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,kCAAiCD,EAAG,EAAtC,CAAL,CACGE,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EAEGF,IAFH,CAESN,OAAD,IAAa;AACjBC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH;AAMD,GAPQ,EAON,CAACC,EAAD,CAPM,CAAT;AASA,MAAI,CAACF,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,IAAtB;AAA4BC,IAAAA;AAA5B,MAAsCb,OAA5C;;AAEA,WAASc,eAAT,GAA2B;AACzBf,IAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEW,KAAV;AAAiB,UAAA,GAAG,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAEI,eAAnC;AAAA,qCACKhB,KADL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAA,oBAAKY;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,IAAI,gBACH;AAAA,iCACE;AAAG,YAAA,MAAM,EAAC,QAAV;AAAmB,YAAA,GAAG,EAAC,YAAvB;AAAoC,YAAA,IAAI,EAAEA,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADG,GAMD,IATN,eAUE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,iCAAoCC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAlDD;;GAAMhB,a;;KAAAA,a;AAoDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst ProjectDetail = () => {\n  const [claps, setClaps] = useState(0);\n  const [project, setProject] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const id = 1;\n\n  useEffect(() => {\n    fetch(`http://localhost:4000/projects/${id}`)\n      .then((r) => r.json())\n      .then((project) => {\n        setProject(project);\n        setIsLoaded(true);\n      });\n  }, [id]);\n\n  if (!isLoaded) return <h2>Loading...</h2>;\n\n  const { image, name, about, link, phase } = project;\n\n  function handleClapClick() {\n    setClaps((claps) => claps + 1);\n  }\n\n  return (\n    <section>\n      <div className=\"project-detail box\">\n        <div className=\"project-image\">\n          <img src={image} alt={name} />\n          <button className=\"claps\" onClick={handleClapClick}>\n            üëè{claps}\n          </button>\n        </div>\n        <div className=\"details\">\n          <h2>{name}</h2>\n          <p>{about}</p>\n          {link ? (\n            <p>\n              <a target=\"_blank\" rel=\"noreferrer\" href={link}>\n                Project Homepage\n              </a>\n            </p>\n          ) : null}\n          <div className=\"extra\">\n            <span className=\"badge blue\">Phase {phase}</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProjectDetail;\n"]},"metadata":{},"sourceType":"module"}