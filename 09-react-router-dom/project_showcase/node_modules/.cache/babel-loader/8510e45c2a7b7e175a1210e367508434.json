{"ast":null,"code":"var _jsxFileName = \"/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/components/ProjectEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectEditForm = _ref => {\n  _s();\n\n  let {\n    projectId,\n    onUpdateProject\n  } = _ref;\n  const [formState, setFormState] = useState({\n    name: \"\",\n    about: \"\",\n    phase: \"\",\n    link: \"\",\n    image: \"\"\n  });\n  const {\n    name,\n    about,\n    phase,\n    link,\n    image\n  } = formState;\n  useEffect(() => {\n    fetch(`http://localhost:4000/projects/${projectId}`).then(res => res.json()).then(project => setFormState(project));\n  }, [projectId]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formState)\n    };\n    fetch(`http://localhost:4000/projects/${projectId}`, configObj).then(resp => resp.json()).then(updatedProj => {\n      onUpdateProject(updatedProj);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"about\",\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"about\",\n      name: \"about\",\n      value: about,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phase\",\n      children: \"Phase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"phase\",\n      id: \"phase\",\n      value: phase,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Phase 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Phase 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"Phase 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"Phase 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"Phase 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"link\",\n      children: \"Project Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"link\",\n      name: \"link\",\n      value: link,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image\",\n      children: \"Screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"image\",\n      name: \"image\",\n      value: image,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectEditForm, \"/+RKITPHA6L5AV/uvCaqWkj00vk=\");\n\n_c = ProjectEditForm;\nexport default ProjectEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectEditForm\");","map":{"version":3,"sources":["/Users/shelbytalbert/Development/Phase2/SENG-SCF-032122-PHASE-2/09-react-router-dom/project_showcase/src/components/ProjectEditForm.js"],"names":["React","useState","useEffect","ProjectEditForm","projectId","onUpdateProject","formState","setFormState","name","about","phase","link","image","fetch","then","res","json","project","handleChange","e","value","target","handleSubmit","preventDefault","configObj","method","headers","Accept","body","JSON","stringify","resp","updatedProj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst ProjectEditForm = ({ projectId, onUpdateProject }) => {\n  const [formState, setFormState] = useState({\n    name: \"\",\n    about: \"\",\n    phase: \"\",\n    link: \"\",\n    image: \"\",\n  });\n\n  const { name, about, phase, link, image } = formState;\n\n  useEffect(() => {\n    fetch(`http://localhost:4000/projects/${projectId}`)\n      .then((res) => res.json())\n      .then((project) => setFormState(project));\n  }, [projectId]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const configObj = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(formState),\n    };\n\n    fetch(`http://localhost:4000/projects/${projectId}`, configObj)\n      .then((resp) => resp.json())\n      .then((updatedProj) => {\n        onUpdateProject(updatedProj);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\" autoComplete=\"off\">\n      <h3>Edit Project</h3>\n\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n\n      <label htmlFor=\"about\">About</label>\n      <textarea id=\"about\" name=\"about\" value={about} onChange={handleChange} />\n\n      <label htmlFor=\"phase\">Phase</label>\n      <select name=\"phase\" id=\"phase\" value={phase} onChange={handleChange}>\n        <option value=\"1\">Phase 1</option>\n        <option value=\"2\">Phase 2</option>\n        <option value=\"3\">Phase 3</option>\n        <option value=\"4\">Phase 4</option>\n        <option value=\"5\">Phase 5</option>\n      </select>\n\n      <label htmlFor=\"link\">Project Homepage</label>\n      <input\n        type=\"text\"\n        id=\"link\"\n        name=\"link\"\n        value={link}\n        onChange={handleChange}\n      />\n\n      <label htmlFor=\"image\">Screenshot</label>\n      <input\n        type=\"text\"\n        id=\"image\"\n        name=\"image\"\n        value={image}\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\">Update Project</button>\n    </form>\n  );\n};\n\nexport default ProjectEditForm;\n"]},"metadata":{},"sourceType":"module"}